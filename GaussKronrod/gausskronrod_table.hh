std::vector<DT> weights_;
std::vector<DT> nodes_;
switch(n) {
  case 1: 
    weights_.resize(3);
    nodes_.resize(3);

    nodes_[0]   = 0.112701665379258;
    weights_[0] = 0.277777777777778;
    nodes_[1]   = 0.500000000000000;
    weights_[1] = 0.444444444444444;
    nodes_[2]   = 0.887298334620742;
    weights_[2] = 0.277777777777778;
    break;

  case 2: 
    weights_.resize(5);
    nodes_.resize(5);

    nodes_[0]   = 0.037089950113724;
    weights_[0] = 0.098989898989899;
    nodes_[1]   = 0.211324865405187;
    weights_[1] = 0.245454545454545;
    nodes_[2]   = 0.500000000000000;
    weights_[2] = 0.311111111111111;
    nodes_[3]   = 0.788675134594813;
    weights_[3] = 0.245454545454545;
    nodes_[4]   = 0.962910049886276;
    weights_[4] = 0.098989898989899;
    break;

  case 3: 
    weights_.resize(7);
    nodes_.resize(7);

    nodes_[0]   = 0.019754365645990;
    weights_[0] = 0.052328113013234;
    nodes_[1]   = 0.112701665379258;
    weights_[1] = 0.134244044934167;
    nodes_[2]   = 0.282878125326599;
    weights_[2] = 0.200698707387981;
    nodes_[3]   = 0.500000000000000;
    weights_[3] = 0.225458269329237;
    nodes_[4]   = 0.717121874673401;
    weights_[4] = 0.200698707387981;
    nodes_[5]   = 0.887298334620742;
    weights_[5] = 0.134244044934167;
    nodes_[6]   = 0.980245634354010;
    weights_[6] = 0.052328113013234;
    break;

  case 4: 
    weights_.resize(9);
    nodes_.resize(9);

    nodes_[0]   = 0.011719874631213;
    weights_[0] = 0.031488686832736;
    nodes_[1]   = 0.069431844202974;
    weights_[1] = 0.085026802667862;
    nodes_[2]   = 0.179856891251845;
    weights_[2] = 0.133399170226142;
    nodes_[3]   = 0.330009478207572;
    weights_[3] = 0.163474594800726;
    nodes_[4]   = 0.500000000000000;
    weights_[4] = 0.173221490945068;
    nodes_[5]   = 0.669990521792428;
    weights_[5] = 0.163474594800726;
    nodes_[6]   = 0.820143108748155;
    weights_[6] = 0.133399170226142;
    nodes_[7]   = 0.930568155797026;
    weights_[7] = 0.085026802667861;
    nodes_[8]   = 0.988280125368787;
    weights_[8] = 0.031488686832736;
    break;

  case 5: 
    weights_.resize(11);
    nodes_.resize(11);

    nodes_[0]   = 0.007957319952579;
    weights_[0] = 0.021291018375541;
    nodes_[1]   = 0.046910077030668;
    weights_[1] = 0.057616658311236;
    nodes_[2]   = 0.122916636714575;
    weights_[2] = 0.093400398278246;
    nodes_[3]   = 0.230765344947158;
    weights_[3] = 0.120520169614324;
    nodes_[4]   = 0.360184793419108;
    weights_[4] = 0.136424900956279;
    nodes_[5]   = 0.500000000000000;
    weights_[5] = 0.141493708928746;
    nodes_[6]   = 0.639815206580892;
    weights_[6] = 0.136424900956280;
    nodes_[7]   = 0.769234655052841;
    weights_[7] = 0.120520169614324;
    nodes_[8]   = 0.877083363285425;
    weights_[8] = 0.093400398278246;
    nodes_[9]   = 0.953089922969332;
    weights_[9] = 0.057616658311237;
    nodes_[10]   = 0.992042680047421;
    weights_[10] = 0.021291018375541;
    break;

  case 6: 
    weights_.resize(13);
    nodes_.resize(13);

    nodes_[0]   = 0.005648398693661;
    weights_[0] = 0.015198077059910;
    nodes_[1]   = 0.033765242898424;
    weights_[1] = 0.041847220223453;
    nodes_[2]   = 0.089313329567486;
    weights_[2] = 0.068660302317224;
    nodes_[3]   = 0.169395306766868;
    weights_[3] = 0.090535997161569;
    nodes_[4]   = 0.268440893762348;
    weights_[4] = 0.106604826135981;
    nodes_[5]   = 0.380690406958402;
    weights_[5] = 0.116885432058497;
    nodes_[6]   = 0.500000000000000;
    weights_[6] = 0.120536290086733;
    nodes_[7]   = 0.619309593041598;
    weights_[7] = 0.116885432058497;
    nodes_[8]   = 0.731559106237652;
    weights_[8] = 0.106604826135982;
    nodes_[9]   = 0.830604693233132;
    weights_[9] = 0.090535997161569;
    nodes_[10]   = 0.910686670432514;
    weights_[10] = 0.068660302317223;
    nodes_[11]   = 0.966234757101576;
    weights_[11] = 0.041847220223453;
    nodes_[12]   = 0.994351601306339;
    weights_[12] = 0.015198077059910;
    break;

  case 7: 
    weights_.resize(15);
    nodes_.resize(15);

    nodes_[0]   = 0.004272314439594;
    weights_[0] = 0.011467661005265;
    nodes_[1]   = 0.025446043828621;
    weights_[1] = 0.031546046314989;
    nodes_[2]   = 0.067567788320116;
    weights_[2] = 0.052395005161125;
    nodes_[3]   = 0.129234407200303;
    weights_[3] = 0.070326629857763;
    nodes_[4]   = 0.206956382266154;
    weights_[4] = 0.084502363319634;
    nodes_[5]   = 0.297077424311301;
    weights_[5] = 0.095175289032393;
    nodes_[6]   = 0.396107522496051;
    weights_[6] = 0.102216470037650;
    nodes_[7]   = 0.500000000000000;
    weights_[7] = 0.104741070542364;
    nodes_[8]   = 0.603892477503949;
    weights_[8] = 0.102216470037649;
    nodes_[9]   = 0.702922575688699;
    weights_[9] = 0.095175289032393;
    nodes_[10]   = 0.793043617733846;
    weights_[10] = 0.084502363319633;
    nodes_[11]   = 0.870765592799697;
    weights_[11] = 0.070326629857763;
    nodes_[12]   = 0.932432211679885;
    weights_[12] = 0.052395005161125;
    nodes_[13]   = 0.974553956171379;
    weights_[13] = 0.031546046314989;
    nodes_[14]   = 0.995727685560406;
    weights_[14] = 0.011467661005265;
    break;

  case 8: 
    weights_.resize(17);
    nodes_.resize(17);

    nodes_[0]   = 0.003310062059142;
    weights_[0] = 0.008911191660355;
    nodes_[1]   = 0.019855071751232;
    weights_[1] = 0.024719697501070;
    nodes_[2]   = 0.052939546576272;
    weights_[2] = 0.041241149465679;
    nodes_[3]   = 0.101666761293187;
    weights_[3] = 0.055823185413420;
    nodes_[4]   = 0.163822964527421;
    weights_[4] = 0.068131554627586;
    nodes_[5]   = 0.237233795041836;
    weights_[5] = 0.078326303084094;
    nodes_[6]   = 0.319649451035934;
    weights_[6] = 0.086035304277605;
    nodes_[7]   = 0.408282678752175;
    weights_[7] = 0.090700012534017;
    nodes_[8]   = 0.500000000000000;
    weights_[8] = 0.092223202872346;
    nodes_[9]   = 0.591717321247825;
    weights_[9] = 0.090700012534017;
    nodes_[10]   = 0.680350548964066;
    weights_[10] = 0.086035304277606;
    nodes_[11]   = 0.762766204958165;
    weights_[11] = 0.078326303084094;
    nodes_[12]   = 0.836177035472579;
    weights_[12] = 0.068131554627586;
    nodes_[13]   = 0.898333238706813;
    weights_[13] = 0.055823185413420;
    nodes_[14]   = 0.947060453423728;
    weights_[14] = 0.041241149465679;
    nodes_[15]   = 0.980144928248768;
    weights_[15] = 0.024719697501070;
    nodes_[16]   = 0.996689937940858;
    weights_[16] = 0.008911191660355;
    break;

  case 9: 
    weights_.resize(19);
    nodes_.resize(19);

    nodes_[0]   = 0.002660919661330;
    weights_[0] = 0.007152387821919;
    nodes_[1]   = 0.015919880246187;
    weights_[1] = 0.019815947580131;
    nodes_[2]   = 0.042518246375161;
    weights_[2] = 0.033259077970137;
    nodes_[3]   = 0.081984446336682;
    weights_[3] = 0.045395340844363;
    nodes_[4]   = 0.132756617408033;
    weights_[4] = 0.055894567342209;
    nodes_[5]   = 0.193314283649705;
    weights_[5] = 0.065000703427671;
    nodes_[6]   = 0.262268760443770;
    weights_[6] = 0.072619794192183;
    nodes_[7]   = 0.337873288298095;
    weights_[7] = 0.078206763894242;
    nodes_[8]   = 0.417888218192507;
    weights_[8] = 0.081431413720058;
    nodes_[9]   = 0.500000000000000;
    weights_[9] = 0.082448006414175;
    nodes_[10]   = 0.582111781807493;
    weights_[10] = 0.081431413720058;
    nodes_[11]   = 0.662126711701904;
    weights_[11] = 0.078206763894242;
    nodes_[12]   = 0.737731239556230;
    weights_[12] = 0.072619794192183;
    nodes_[13]   = 0.806685716350295;
    weights_[13] = 0.065000703427670;
    nodes_[14]   = 0.867243382591967;
    weights_[14] = 0.055894567342209;
    nodes_[15]   = 0.918015553663318;
    weights_[15] = 0.045395340844363;
    nodes_[16]   = 0.957481753624839;
    weights_[16] = 0.033259077970137;
    nodes_[17]   = 0.984080119753813;
    weights_[17] = 0.019815947580131;
    nodes_[18]   = 0.997339080338670;
    weights_[18] = 0.007152387821920;
    break;

  case 10: 
    weights_.resize(21);
    nodes_.resize(21);

    nodes_[0]   = 0.002171418487096;
    weights_[0] = 0.005847319433686;
    nodes_[1]   = 0.013046735741414;
    weights_[1] = 0.016279081153982;
    nodes_[2]   = 0.034921254322146;
    weights_[2] = 0.027377948287176;
    nodes_[3]   = 0.067468316655508;
    weights_[3] = 0.037519837405460;
    nodes_[4]   = 0.109591136706792;
    weights_[4] = 0.046562727291849;
    nodes_[5]   = 0.160295215850488;
    weights_[5] = 0.054693579401149;
    nodes_[6]   = 0.218621432665698;
    weights_[6] = 0.061745988131033;
    nodes_[7]   = 0.283302302935376;
    weights_[7] = 0.067354608655737;
    nodes_[8]   = 0.352803568649270;
    weights_[8] = 0.071387969288530;
    nodes_[9]   = 0.425562830509184;
    weights_[9] = 0.073869552450669;
    nodes_[10]   = 0.500000000000000;
    weights_[10] = 0.074722777001459;
    nodes_[11]   = 0.574437169490816;
    weights_[11] = 0.073869552450669;
    nodes_[12]   = 0.647196431350730;
    weights_[12] = 0.071387969288530;
    nodes_[13]   = 0.716697697064624;
    weights_[13] = 0.067354608655737;
    nodes_[14]   = 0.781378567334302;
    weights_[14] = 0.061745988131033;
    nodes_[15]   = 0.839704784149512;
    weights_[15] = 0.054693579401149;
    nodes_[16]   = 0.890408863293209;
    weights_[16] = 0.046562727291849;
    nodes_[17]   = 0.932531683344492;
    weights_[17] = 0.037519837405460;
    nodes_[18]   = 0.965078745677854;
    weights_[18] = 0.027377948287176;
    nodes_[19]   = 0.986953264258586;
    weights_[19] = 0.016279081153983;
    nodes_[20]   = 0.997828581512904;
    weights_[20] = 0.005847319433686;
    break;

  default:
    throw std::range_error("No suitable Gauss-Kronrod rule found");
}
